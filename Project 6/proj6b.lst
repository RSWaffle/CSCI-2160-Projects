Microsoft (R) Macro Assembler Version 6.11		    11/29/19 03:10:27
proj6b.asm						     Page 1 - 1


				;******************************************************************************************
				;*  Program Name: Proj6a.asm
				;*  Programmer:   Ryan Shupe
				;*  Class:        CSCI 2160-001
				;*  Lab:		  Project 6a
				;*  Date:         Created 12/07/2019
				;*  Purpose:      Driver to test the methods written in convertMethods
				;******************************************************************************************
					.486						;This tells assembler to generate 32-bit code
					.model flat					;This tells assembler that all addresses are real addresses
					.stack 100h					;EVERY program needs to have a stack allocated
				;******************************************************************************************
					ExitProcess PROTO NEAR32 stdcall, dwExitCode:DWORD  						;Executes "normal" termination
					putstring  PROTO NEAR stdcall, lpStringToDisplay:dword
					hexToCharacter PROTO stdcall, lpDestination:dword, lpSource:dword, numBytes:dword
				;******************************************************************************************
 00000000			.DATA
 00000000 41 42 43 44 45	strChar	byte "ABCDEFG" ,0
	   46 47 00
 00000008 1234ABCD		hexNums dword 1234ABCDh
 0000000C  00000050 [		strHexChars byte 80 dup(?)	;holds converted string of characters
	    00
	   ]


				;******************************************************************************************
 00000000			.CODE
 00000000  33 C0			XOR EAX, EAX
 00000002			_start:

				INVOKE hexToCharacter, addr strHexChars, addr strChar, 8
				INVOKE putstring, addr strHexChars

 0000001D  B8 00000000		MOV EAX, 0

				;************************************* the instructions below calls for "normal termination"	
				INVOKE ExitProcess,0						 
 00000029			PUBLIC _start
				END
Microsoft (R) Macro Assembler Version 6.11		    11/29/19 03:10:27
proj6b.asm						     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00000100 DWord	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 0000005C DWord	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000029 DWord	  Public  'CODE'	


Procedures,  parameters and locals:

                N a m e                 Type     Value    Attr

$$$$$$00001  . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000029 Private
  _start . . . . . . . . . . . .	L Near	 00000002 _TEXT	
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
hexToCharacter . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
putstring  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000000h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
_start . . . . . . . . . . . . .	L Near	 00000002 _TEXT	Public
hexNums  . . . . . . . . . . . .	DWord	 00000008 _DATA	
strChar  . . . . . . . . . . . .	Byte	 00000000 _DATA	
strHexChars  . . . . . . . . . .	Byte	 0000000C _DATA	

	   0 Warnings
	   0 Errors
